name: CI/CD Pipeline

on:
  pull_request:
    branches: [main]

jobs:
  avoid_redundancy:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Redundant Deployments
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          submodules: recursive

      - name: Authorize Git
        run: |
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --global user.name "$GITHUB_ACTOR"

      - name: Update submodules
        run: git submodule update --init --recursive --remote -f
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Execute Deployment Script (init_prod.sh)
        run: bash ./init_prod.sh

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build Docker images
        run: |
          docker build -f Frontend/Dockerfile.prod -t picadosya/picados-ya-frontend ./Frontend
          docker build -f Backend/Dockerfile.prod -t picadosya/picados-ya-backend ./Backend

      - name: Push Docker images to Docker Hub
        run: |
          docker push picadosya/picados-ya-frontend
          docker push picadosya/picados-ya-backend

  deploy:
    runs-on: aws-ec2
    needs: [avoid_redundancy, build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Deploy with Docker Compose
        run: |
          sudo docker compose -f docker-compose.prod.yml up -d
